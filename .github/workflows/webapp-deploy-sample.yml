name: Deploy ASP.NET Core app to Azure Web App

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/webapp-deploy-*.yml'

env:
  AZURE_WEBAPP_NAME: 'app-webapp-sandbox-dotnet-beachside'
  AZURE_WEBAPP_PACKAGE_PATH: 'web-app-sample/WebApplication1'
  DOTNET_VERSION: '3.1.x'
  AZURE_WEBAPP_SLOT_NAME: 'STAGING'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
            # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          pushd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          dotnet build --configuration Release --runtime win-x86
          dotnet publish -c Release --no-build --runtime win-x86 -o '${{ github.workspace }}/output/${{ env.AZURE_WEBAPP_NAME }}' 
          popd
      - name: debug
        run: |
          echo '${{ github.workspace }}/output'
          ls ${{ github.workspace }}/output
          echo '${{ github.workspace }}/output/${{ env.AZURE_WEBAPP_NAME }}'
          ls ${{ github.workspace }}/output/${{ env.AZURE_WEBAPP_NAME }}
      # Deploy to Azure Web apps
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_RG_WEBAPPS_SANDBOX }}
      # - name: 'Run Azure webapp deploy action'
      #   uses: azure/webapps-deploy@v2
      #   with: 
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #   #  publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE_APP_WEBAPP_SANDBOX_DOTNET_BEACHSIDE  }}
      #     package: '${{ github.workspace }}/output/${{ env.AZURE_WEBAPP_NAME }}'
      #     slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}
      - name: 'Run Azure webapp deploy with az CLI'
        run: |
          pushd ${{ github.workspace }}/output/${{ env.AZURE_WEBAPP_NAME }}
          zip -r ${{ github.workspace }}/output/${{ env.AZURE_WEBAPP_NAME }}.zip .
          popd
          az webapp deployment source config-zip -g rg-webapps-sandbox -n ${{ env.AZURE_WEBAPP_NAME }} --slot ${{ env.AZURE_WEBAPP_SLOT_NAME }} --src ${{ github.workspace }}/outputs/${{ env.AZURE_WEBAPP_NAME }}.zip
